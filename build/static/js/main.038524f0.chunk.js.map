{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","AuthContext","React","createContext","token","isLoggedIn","login","logout","AuthContextProvider","props","initialToken","localStorage","getItem","useState","setToken","logoutHandler","removeItem","contextValue","expirationTime","setItem","curretTime","Date","getTime","calculateRemaingTime","setTimeout","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","ProfileForm","newPasswordInputRef","useRef","history","useHistory","form","onSubmit","event","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replace","control","htmlFor","type","id","minLength","ref","action","UserProfile","profile","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","isLoading","setIsLoading","auth","url","enteredEmail","enteredPassword","email","ok","json","data","Error","expiresIn","toISOString","catch","err","alert","message","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.038524f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__2xGgc\",\"control\":\"ProfileForm_control__2YUZH\",\"action\":\"ProfileForm_action__opJ_6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2lqQ1\",\"logo\":\"MainNavigation_logo__1TgMx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__gQOnH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__kwCvL\"};","import React, { useState } from 'react';\n\nconst AuthContext = React.createContext({\n\ttoken: '',\n\tisLoggedIn: false,\n\tlogin: (token) => {},\n\tlogout: () => {}\n});\n\nconst calculateRemaingTime = (expirationTime) => {\n\tconst curretTime = new Date().getTime();\n\tconst adjustedExpirationTime = new Date(expirationTime).getTime();\n\tconst remainingTime = adjustedExpirationTime - curretTime;\n\treturn remainingTime;\n};\n\nexport const AuthContextProvider = (props) => {\n\tconst initialToken = localStorage.getItem('token');\n\tconst [ token, setToken ] = useState(initialToken);\n\n\tconst userIsLoggedIn = !!token;\n\n\n\n\tconst logoutHandler = () => {\n\t\tsetToken(null);\n\t\tlocalStorage.removeItem('token');\n\t};\n  const loginHandler = (token, expirationTime) => {\n\t\tsetToken(token);\n\t\tlocalStorage.setItem('token', token);\n\t\tconst remainingTime = calculateRemaingTime(expirationTime);\n\t\tsetTimeout(logoutHandler, 3000);\n\t};\n\n\tconst contextValue = {\n\t\ttoken: token,\n\t\tisLoggedIn: userIsLoggedIn,\n\t\tlogin: loginHandler,\n\t\tlogout: logoutHandler\n\t};\n\n\treturn <AuthContext.Provider value={contextValue}>{props.children}</AuthContext.Provider>;\n};\n\nexport default AuthContext;\n","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n\n  const isLoggedIn = authCtx.isLoggedIn;\n  const onLogoutHandler=()=>{\n    authCtx.logout()\n  }\n  return (\n    <header className={classes.header}>\n      <Link to='/'>\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to='/auth'>Login</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to='/profile'>Profile</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button onClick={onLogoutHandler}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './ProfileForm.module.css';\n\nconst ProfileForm = () => {\n  const newPasswordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\nconst history =useHistory()\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredNewPassword = newPasswordInputRef.current.value;\n\n    // add validation\n\n    fetch('https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyA2cGi4nySKM25qAX9CqnzeYziSto1DXu0', {\n      method: 'POST',\n      body: JSON.stringify({\n        idToken: authCtx.token,\n        password: enteredNewPassword,\n        returnSecureToken: false\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      // assumption: Always succeeds!\n      history.replace('/')\n\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input type='password' id='new-password' minLength=\"7\" ref={newPasswordInputRef} />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router';\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\nconst history=useHistory()\n  const authCtx = useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // optional: Add validation\n\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url =\n        'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyA2cGi4nySKM25qAX9CqnzeYziSto1DXu0';\n    } else {\n      url =\n        'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyA2cGi4nySKM25qAX9CqnzeYziSto1DXu0';\n    }\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = 'Authentication failed!';\n            // if (data && data.error && data.error.message) {\n            //   errorMessage = data.error.message;\n            // }\n\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        let expirationTime= new Date(new Date().getTime()+(+data.expiresIn * 1000));\n        authCtx.login(data.idToken,expirationTime.toISOString());\n        history.replace('/')\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input\n            type='password'\n            id='password'\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          )}\n          {isLoading && <p>Sending request...</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { useContext } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport UserProfile from './components/Profile/UserProfile';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\nimport AuthContext from './store/auth-context';\nimport {Redirect} from 'react-router-dom'\n\nfunction App() {\n  const authCtx=useContext(AuthContext)\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <HomePage />\n        </Route>\n       { !authCtx.isLoggedIn && <Route path='/auth'>\n          <AuthPage />\n        </Route>}\n       <Route path='/profile'>\n       { authCtx.isLoggedIn && <UserProfile />}\n       { !authCtx.isLoggedIn && <Redirect to ='/auth' />}\n        </Route>\n        <Route path=\"*\"><Redirect to=\"/\"/></Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport { AuthContextProvider } from './store/auth-context';\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__MPw6W\",\"control\":\"AuthForm_control__2fVSU\",\"actions\":\"AuthForm_actions__1VNhY\",\"toggle\":\"AuthForm_toggle__21tnB\"};"],"sourceRoot":""}